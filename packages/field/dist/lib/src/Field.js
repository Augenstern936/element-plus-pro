"use strict";Object.defineProperties(exports,{__esModule:{value:!0},[Symbol.toStringTag]:{value:"Module"}}),require("../node_modules/.pnpm/vue@3.4.21_typescript@5.4.4/node_modules/vue/dist/vue.runtime.esm-bundler.js");const e=require("@element-plus/pro-utils"),r=require("./components/index.js"),o=require("./typing.js"),i=require("../node_modules/.pnpm/@vue_runtime-core@3.4.21/node_modules/@vue/runtime-core/dist/runtime-core.esm-bundler.js"),s=require("./components/Avatar/typing.js"),t=require("./components/Avatar/index.js"),p=require("./components/Cascader/typing.js"),l=require("./components/Cascader/index.js"),d=require("./components/Checkbox/typing.js"),n=require("./components/Checkbox/index.js"),a=require("./components/Color/typing.js"),c=require("./components/Color/index.js"),u=require("./components/Image/typing.js"),m=require("./components/Image/index.js"),P=require("./components/Progress/typing.js"),F=require("./components/Progress/index.js"),x=require("./components/Radio/typing.js"),g=require("./components/Radio/index.js"),j=require("./components/Rate/typing.js"),q=require("./components/Rate/index.js"),S=require("./components/Slider/typing.js"),y=require("./components/Slider/index.js"),h=require("./components/Switch/typing.js"),v=require("./components/Switch/index.js"),C=require("./components/TimeSelect/typing.js"),R=require("./components/TimeSelect/index.js"),T=require("./components/TreeSelect/index.js"),A=i.defineComponent(((o,s)=>{const t=i.computed((()=>r.default[o.valueType||"text"])),p=i.computed({get:()=>o.modelValue,set:e=>{s.emit("update:modelValue",e)}}),l=i.computed((()=>{var r;const i=null!=(r=o.placeholder)?r:e.formatPlaceholder("",o.valueType||"text");return Array.isArray(i)&&i.length>1?{startPlaceholder:i[0],endPlaceholder:i[1]}:{placeholder:Array.isArray(i)?i[0]:i}}));return()=>i.createVNode(t.value,i.mergeProps({modelValue:p.value,"onUpdate:modelValue":e=>p.value=e},o.fieldProps,l.value),null)}),{name:"ProField"});A.props=o.proFieldProps;for(const f in r.default){const e=f.charAt(0).toUpperCase()+f.slice(1),o=r.default[f];A[e]=e=>i.createVNode(o,i.mergeProps(e,{type:f}),null)}const b=e.withInstall(A);exports.proFieldAvatar=s.proFieldAvatar,exports.ProFieldAvatar=t.ProFieldAvatar,exports.proFieldCascaderProps=p.proFieldCascaderProps,exports.ProFieldCascader=l.ProFieldCascader,exports.proFieldCheckboxProps=d.proFieldCheckboxProps,exports.ProFieldCheckbox=n.ProFieldCheckbox,exports.proFieldColor=a.proFieldColor,exports.ProFieldColor=c.ProFieldColor,exports.proFieldImageProps=u.proFieldImageProps,exports.ProFieldImage=m.ProFieldImage,exports.proFieldProgressProps=P.proFieldProgressProps,exports.ProFieldProgress=F.ProFieldProgress,exports.proFieldRadioProps=x.proFieldRadioProps,exports.ProFieldRadio=g.ProFieldRadio,exports.proFieldRateProps=j.proFieldRateProps,exports.ProFieldRate=q.ProFieldRate,exports.proFieldSliderProps=S.proFieldSliderProps,exports.ProFieldSlider=y.ProFieldSlider,exports.proFieldSwitchProps=h.proFieldSwitchProps,exports.ProFieldSwitch=v.ProFieldSwitch,exports.proFieldTimeSelectProps=C.proFieldTimeSelectProps,exports.ProFieldTimeSelect=R.ProFieldTimeSelect,exports.ProFieldTreeSelect=T.ProFieldTreeSelect,exports.default=b;
