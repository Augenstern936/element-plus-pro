"use strict";const e=require("vue"),g=require("@element-plus/pro-utils"),a=require("element-plus"),P=require("@element-plus/icons-vue"),f={modelValue:{type:[String,Number,Boolean,Array],default:""},mode:{type:String,default:"edit"},valueType:{type:String,default:"text"},placeholder:{type:[String,Array]},fieldProps:{type:Object,default:{}}};const y=e.defineComponent((o,r)=>{const l=e.computed({get:()=>o.modelValue,set:t=>{r.emit("update:modelValue",t)}});return()=>e.createVNode(a.ElInput,e.mergeProps({modelValue:l.value,"onUpdate:modelValue":t=>l.value=t},o),null)},{name:"ProFieldInput"});y.props={...a.inputProps,type:{type:String,default:"text"}};const c=y;const F=e.defineComponent((o,r)=>{const l=e.computed({get:()=>o.modelValue,set:t=>{r.emit("update:modelValue",t)}});return()=>e.createVNode(a.ElDatePicker,e.mergeProps({modelValue:l.value,"onUpdate:modelValue":t=>l.value=t},o),null)},{name:"ProFieldDate"});F.props={...a.datePickerProps,style:{type:Object,default:{}}};const u=F;const B=e.defineComponent((o,r)=>{const l=e.computed({get:()=>o.modelValue,set:t=>{r.emit("update:modelValue",t)}});return()=>e.createVNode(a.ElSelect,{modelValue:l.value,"onUpdate:modelValue":t=>l.value=t},{default:()=>{var t;return[(t=o.options)==null?void 0:t.map((n,d)=>e.createVNode(a.ElOption,e.mergeProps(n,{key:d}),{default:()=>[n.label]}))]}})},{name:"ProFieldSelect"}),S=B;const v=e.defineComponent((o,r)=>{const l=e.computed({get:()=>o.modelValue,set:t=>{r.emit("update:modelValue",t)}});return()=>e.createVNode(a.ElCascader,e.mergeProps({modelValue:l.value,"onUpdate:modelValue":t=>l.value=t},o),null)},{name:"ProFieldCascader"});v.props={...a.cascaderProps,modelValue:{type:[String,Number]}};const O=v;const C=e.defineComponent((o,r)=>{const l=e.computed({get:()=>o.modelValue,set:t=>{r.emit("update:modelValue",t)}});return()=>e.createVNode(a.ElRadioGroup,{modelValue:l.value,"onUpdate:modelValue":t=>l.value=t},{default:()=>{var t;return[(t=o.options)==null?void 0:t.map((n,d)=>e.createVNode(e.Fragment,null,[n.type=="radio"?e.createVNode(a.ElRadio,e.mergeProps(n,{key:d}),{default:()=>[n.label]}):e.createVNode(a.ElRadioButton,{label:n.value,key:d},{default:()=>[n.label]})]))]}})},{name:"ProFieldRadio"});C.props={...a.radioProps,type:{type:String,default:"radio"},options:{type:Array,default:[]}};const s=C;const h=e.defineComponent((o,r)=>{const l=e.computed({get:()=>o.modelValue,set:t=>{r.emit("update:modelValue",t)}});return()=>e.createVNode(a.ElCheckboxGroup,{modelValue:l.value,"onUpdate:modelValue":t=>l.value=t},{default:()=>{var t;return[(t=o.options)==null?void 0:t.map((n,d)=>e.createVNode(e.Fragment,null,[o.type=="checkbox"?e.createVNode(a.ElCheckbox,e.mergeProps(n,{key:d}),null):e.createVNode(a.ElCheckboxButton,e.mergeProps(n,{key:d}),{default:()=>[n.label]})]))]}})},{name:"ProFieldCheckbox"});h.props={...a.checkboxProps,type:{type:String,default:"checkbox"},options:{type:Array,default:[]}};const k=h;const b=e.defineComponent((o,r)=>{const l=e.computed({get:()=>o.modelValue,set:t=>{r.emit("update:modelValue",t)}});return()=>e.createVNode(a.ElRate,e.mergeProps({modelValue:l.value,"onUpdate:modelValue":t=>l.value=t},o),null)},{name:"ProFieldRate"});b.props=a.radioProps;const j=b;const N=e.defineComponent((o,r)=>{const l=e.computed({get:()=>o.modelValue,set:t=>{r.emit("update:modelValue",t)}});return()=>e.createVNode(a.ElSwitch,e.mergeProps({modelValue:l.value,"onUpdate:modelValue":t=>l.value=t},o),null)},{name:"ProFieldSwitch"});N.props=a.switchProps;const D=N;const x=e.defineComponent((o,r)=>()=>e.createVNode(a.ElAvatar,o,null),{name:"ProFieldAvatar"});x.props=a.avatarProps;const $=x;const T=e.defineComponent((o,r)=>{const l=e.computed({get:()=>o.modelValue,set:t=>{r.emit("update:modelValue",t)}});return()=>e.createVNode(a.ElSlider,e.mergeProps({modelValue:l.value,"onUpdate:modelValue":t=>l.value=t},o),null)},{name:"ProFieldSlider"});T.props=a.sliderProps;const q=T;const E=e.defineComponent((o,r)=>()=>e.createVNode(a.ElImage,o,null),{name:"ProFieldImage"});E.props=a.imageProps;const G=E;const U=e.defineComponent((o,r)=>{const l=e.computed({get:()=>o.modelValue,set:t=>{r.emit("update:modelValue",t)}});return()=>e.createVNode(a.ElColorPicker,e.mergeProps({modelValue:l.value,"onUpdate:modelValue":t=>l.value=t},o),null)},{name:"ProFieldColor"});U.props=a.colorPickerProps;const z=U;const R=e.defineComponent((o,r)=>()=>e.createVNode(a.ElProgress,o,null),{name:"ProFieldProgress"});R.props=a.progressProps;const H=R;const M=e.defineComponent((o,r)=>{const l=e.computed({get:()=>o.modelValue,set:t=>{r.emit("update:modelValue",t)}});return()=>e.createVNode(a.ElTreeSelect,e.mergeProps({modelValue:l.value,"onUpdate:modelValue":t=>l.value=t},o),null)},{name:"ProFieldTreeSelect"}),A=M;const I=e.defineComponent((o,r)=>{const l=e.computed({get:()=>o.modelValue,set:t=>{r.emit("upTime:modelValue",t)}});return()=>e.createVNode(a.ElTimePicker,e.mergeProps({modelValue:l.value,"onUpdate:modelValue":t=>l.value=t},o),null)},{name:"ProFieldTime"});I.props={...a.timePickerDefaultProps,type:{type:String,default:"time"},style:{type:Object,default:{}}};const V=I;const W={format:{type:String,default:"HH:mm"},modelValue:String,disabled:Boolean,editable:{type:Boolean,default:!0},effect:{type:String,default:"light"},clearable:{type:Boolean,default:!0},size:a.useSizeProp,placeholder:String,start:{type:String,default:"09:00"},end:{type:String,default:"18:00"},step:{type:String,default:"00:30"},minTime:String,maxTime:String,name:String,prefixIcon:{type:[String,Object],default:()=>P.Clock},clearIcon:{type:[String,Object],default:()=>P.CircleClose},style:{type:Object,default:{}}},w=e.defineComponent((o,r)=>{const l=e.computed({get:()=>o.modelValue,set:t=>{r.emit("upTime:modelValue",t)}});return()=>e.createVNode(a.ElTimeSelect,e.mergeProps({modelValue:l.value,"onUpdate:modelValue":t=>l.value=t},o),null)},{name:"ProFieldTimeSelect"});w.props=W;const Y=w,m={text:c,password:c,textarea:c,date:u,dates:u,dateTime:u,dateWeek:u,dateMonth:u,dateYear:u,dateRange:u,dateTimeRange:u,dateMonthRange:u,time:V,timeRange:V,timeSelect:Y,select:S,treeSelect:A,checkbox:k,radio:s,radioButton:s,switch:D,avatar:$,image:G,rate:j,color:z,cascader:O,slider:q,progress:H},i=e.defineComponent((o,r)=>{const l=e.computed(()=>m[o.valueType||"text"]),t=e.computed({get:()=>o.modelValue,set:d=>{r.emit("update:modelValue",d)}}),n=e.computed(()=>{var p;const d=(p=o.placeholder)!=null?p:g.formatPlaceholder("",o.valueType||"text");return Array.isArray(d)?{startPlaceholder:d[0],endPlaceholder:d[1]}:{placeholder:d}});return()=>e.createVNode(l.value,e.mergeProps({modelValue:t.value,"onUpdate:modelValue":d=>t.value=d},n.value,o.fieldProps,{type:o.valueType}),null)},{name:"ProField"});i.props=f;for(const o in m){const r=o.charAt(0).toUpperCase()+o.slice(1),l=m[o];i[r]=t=>e.createVNode(l,e.mergeProps(t,{type:o}),null)}const _=g.withInstall(i);exports.ProField=_;exports.ProFieldCheckbox=k;exports.ProFieldRadio=s;exports.ProFieldSelect=S;exports.ProFieldTreeSelect=A;exports.proFieldProps=f;
