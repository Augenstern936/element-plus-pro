"use strict";const e=require("vue"),i=require("@element-plus/pro-utils"),l=require("element-plus"),k=require("@element-plus/icons-vue");const T={...l.avatarProps,style:{type:Object,default:{}}},p=e.defineComponent(t=>()=>e.createVNode(l.ElAvatar,t,null),{name:"ProFieldAvatar"});p.props=T;const G=p;const R={...l.calendarProps,style:{type:Object,default:{}}},m=e.defineComponent((t,a)=>{const r=e.computed({get:()=>t.modelValue,set:o=>{a.emit("update:modelValue",o)}});return()=>e.createVNode(l.ElCascader,e.mergeProps({modelValue:r.value,"onUpdate:modelValue":o=>r.value=o},t),null)},{name:"ProFieldCascader"});m.props=R;const M=m;const A={...l.checkboxProps,type:{type:String,default:"checkbox"},options:{type:Array,default:[]},style:{type:Object,default:{}}},P=e.defineComponent((t,a)=>{const r=e.computed({get:()=>t.modelValue,set:o=>{a.emit("update:modelValue",o)}});return()=>e.createVNode(l.ElCheckboxGroup,{modelValue:r.value,"onUpdate:modelValue":o=>r.value=o},{default:()=>{var o;return[(o=t.options)==null?void 0:o.map((d,n)=>e.createVNode(e.Fragment,null,[t.type=="checkbox"?e.createVNode(l.ElCheckbox,e.mergeProps(d,{key:n}),null):e.createVNode(l.ElCheckboxButton,e.mergeProps(d,{key:n}),{default:()=>[d.label]})]))]}})},{name:"ProFieldCheckbox"});P.props=A;const z=P;const E={...l.colorPickerProps,style:{type:Object,default:{}}},g=e.defineComponent((t,a)=>{const r=e.computed({get:()=>t.modelValue,set:o=>{a.emit("update:modelValue",o)}});return()=>e.createVNode(l.ElColorPicker,e.mergeProps({modelValue:r.value,"onUpdate:modelValue":o=>r.value=o},t),null)},{name:"ProFieldColor"});g.props=E;const H=g;const c=e.defineComponent((t,a)=>{const r=e.computed({get:()=>t.modelValue,set:d=>{a.emit("update:modelValue",d)}}),o=e.computed(()=>{var n;const d=(n=t.placeholder)!=null?n:i.formatPlaceholder("",t.type||"text");return Array.isArray(d)&&d.length>1?{startPlaceholder:d[0],endPlaceholder:d[1]}:{placeholder:Array.isArray(d)?d[0]:d}});return()=>e.createVNode(l.ElDatePicker,e.mergeProps({modelValue:r.value,"onUpdate:modelValue":d=>r.value=d},t,o.value),null)});c.props={...l.datePickerProps,placeholder:{type:[String,Array],default:void 0},style:{type:Object,default:{}}};const W=t=>e.createVNode(c,e.mergeProps(t,{type:"date"}),null),Y=t=>e.createVNode(c,e.mergeProps(t,{type:"dates"}),null),_=t=>e.createVNode(c,e.mergeProps(t,{type:"datetime"}),null),J=t=>e.createVNode(c,e.mergeProps(t,{type:"week"}),null),K=t=>e.createVNode(c,e.mergeProps(t,{type:"month"}),null),L=t=>e.createVNode(c,e.mergeProps(t,{type:"year"}),null),Q=t=>e.createVNode(c,e.mergeProps(t,{type:"daterange"}),null),X=t=>e.createVNode(c,e.mergeProps(t,{type:"datetimerange"}),null),Z=t=>e.createVNode(c,e.mergeProps(t,{type:"monthrange"}),null);const O={...l.imageProps,style:{type:Object,default:{}}},V=e.defineComponent(t=>()=>e.createVNode(l.ElImage,t,null),{name:"ProFieldImage"});V.props=O;const ee=V;const s=e.defineComponent((t,a)=>{const r=e.computed({get:()=>t.modelValue,set:o=>{a.emit("update:modelValue",o)}});return()=>e.createVNode(l.ElInput,e.mergeProps({modelValue:r.value,"onUpdate:modelValue":o=>r.value=o},t),null)});s.props={...l.inputProps,type:{type:String,default:"text"}};const te=t=>e.createVNode(s,e.mergeProps(t,{type:"text"}),null),oe=t=>e.createVNode(s,e.mergeProps(t,{type:"password"}),null),re=t=>e.createVNode(s,e.mergeProps(t,{type:"textarea"}),null);const j={...l.progressProps,style:{type:Object,default:{}}},F=e.defineComponent(t=>()=>e.createVNode(l.ElProgress,t,null),{name:"ProFieldProgress"});F.props=j;const le=F;const U={...l.radioProps,type:{type:String,default:"radio"},options:{type:Array,default:[]},style:{type:Object,default:{}}},y=e.defineComponent((t,a)=>{const r=e.computed({get:()=>t.modelValue,set:o=>{a.emit("update:modelValue",o)}});return()=>e.createVNode(l.ElRadioGroup,{modelValue:r.value,"onUpdate:modelValue":o=>r.value=o},{default:()=>{var o;return[(o=t.options)==null?void 0:o.map((d,n)=>e.createVNode(e.Fragment,null,[d.type=="radio"?e.createVNode(l.ElRadio,e.mergeProps(d,{key:n}),{default:()=>[d.label]}):e.createVNode(l.ElRadioButton,{label:d.value,key:n},{default:()=>[d.label]})]))]}})},{name:"ProFieldRadio"});y.props=U;const x=y;const w={...l.rateProps,style:{type:Object,default:{}}},f=e.defineComponent((t,a)=>{const r=e.computed({get:()=>t.modelValue,set:o=>{a.emit("update:modelValue",o)}});return()=>e.createVNode(l.ElRate,e.mergeProps({modelValue:r.value,"onUpdate:modelValue":o=>r.value=o},t),null)},{name:"ProFieldRate"});f.props=w;const ae=f;const de=e.defineComponent((t,a)=>{const r=e.computed({get:()=>t.modelValue,set:o=>{a.emit("update:modelValue",o)}});return()=>e.createVNode(l.ElSelect,{modelValue:r.value,"onUpdate:modelValue":o=>r.value=o},{default:()=>{var o;return[(o=t.options)==null?void 0:o.map((d,n)=>e.createVNode(l.ElOption,e.mergeProps(d,{key:n}),{default:()=>[d.label]}))]}})},{name:"ProFieldSelect"}),ne=de;const D={...l.sliderProps,style:{type:Object,default:{}}},S=e.defineComponent((t,a)=>{const r=e.computed({get:()=>t.modelValue,set:o=>{a.emit("update:modelValue",o)}});return()=>e.createVNode(l.ElSlider,e.mergeProps({modelValue:r.value,"onUpdate:modelValue":o=>r.value=o},t),null)},{name:"ProFieldSlider"});S.props=D;const ce=S;const I={...l.switchProps,style:{type:Object,default:{}}},h=e.defineComponent((t,a)=>{const r=e.computed({get:()=>t.modelValue,set:o=>{a.emit("update:modelValue",o)}});return()=>e.createVNode(l.ElSwitch,e.mergeProps({modelValue:r.value,"onUpdate:modelValue":o=>r.value=o},t),null)},{name:"ProFieldSwitch"});h.props=I;const se=h;const v=e.defineComponent((t,a)=>{const r=e.computed({get:()=>t.modelValue,set:o=>{a.emit("upTime:modelValue",o)}});return()=>e.createVNode(l.ElTimePicker,e.mergeProps({modelValue:r.value,"onUpdate:modelValue":o=>r.value=o},t),null)});v.props={...l.timePickerDefaultProps,style:{type:Object,default:{}}};const ue=t=>e.createVNode(v,e.mergeProps(t,{isRange:!1}),null),ie=t=>e.createVNode(v,e.mergeProps(t,{isRange:!0}),null);const B={format:{type:String,default:"HH:mm"},modelValue:String,disabled:Boolean,editable:{type:Boolean,default:!0},effect:{type:String,default:"light"},clearable:{type:Boolean,default:!0},size:l.useSizeProp,placeholder:String,start:{type:String,default:"09:00"},end:{type:String,default:"18:00"},step:{type:String,default:"00:30"},minTime:String,maxTime:String,name:String,prefixIcon:{type:[String,Object],default:()=>k.Clock},clearIcon:{type:[String,Object],default:()=>k.CircleClose},style:{type:Object,default:{}}},C=e.defineComponent((t,a)=>{const r=e.computed({get:()=>t.modelValue,set:o=>{a.emit("upTime:modelValue",o)}});return()=>e.createVNode(l.ElTimeSelect,e.mergeProps({modelValue:r.value,"onUpdate:modelValue":o=>r.value=o},t),null)},{name:"ProFieldTimeSelect"});C.props=B;const pe=C;const $=e.defineComponent((t,a)=>{const r=e.computed({get:()=>t.modelValue,set:o=>{a.emit("update:modelValue",o)}});return()=>e.createVNode(l.ElTreeSelect,e.mergeProps({modelValue:r.value,"onUpdate:modelValue":o=>r.value=o},t),null)},{name:"ProFieldTreeSelect"}),me=$,u={text:te,password:oe,textarea:re,date:W,dates:Y,dateTime:_,dateWeek:J,dateMonth:K,dateYear:L,dateRange:Q,dateTimeRange:X,dateMonthRange:Z,time:ue,timeRange:ie,timeSelect:pe,select:ne,treeSelect:me,checkbox:z,radio:x,radioButton:x,switch:se,avatar:G,image:ee,rate:ae,color:H,cascader:M,slider:ce,progress:le},q={modelValue:{type:[String,Number,Boolean,Array],default:""},mode:{type:String,default:"edit"},valueType:{type:String,default:"text"},placeholder:{type:[String,Array]},fieldProps:{type:Object,default:{}}},b=e.defineComponent((t,a)=>{const r=e.computed(()=>u[t.valueType||"text"]),o=e.computed({get:()=>t.modelValue,set:n=>{a.emit("update:modelValue",n)}}),d=e.computed(()=>{var N;const n=(N=t.placeholder)!=null?N:i.formatPlaceholder("",t.valueType||"text");return Array.isArray(n)&&n.length>1?{startPlaceholder:n[0],endPlaceholder:n[1]}:{placeholder:Array.isArray(n)?n[0]:n}});return()=>e.createVNode(r.value,e.mergeProps({modelValue:o.value,"onUpdate:modelValue":n=>o.value=n},t.fieldProps,d.value),null)},{name:"ProField"});b.props=q;for(const t in u){const a=t.charAt(0).toUpperCase()+t.slice(1),r=u[t];b[a]=o=>e.createVNode(r,e.mergeProps(o,{type:t}),null)}const Pe=i.withInstall(b);exports.ProField=Pe;exports.ProFieldAvatar=p;exports.ProFieldCascader=m;exports.ProFieldCheckbox=P;exports.ProFieldColor=g;exports.ProFieldImage=V;exports.ProFieldProgress=F;exports.ProFieldRadio=y;exports.ProFieldRate=f;exports.ProFieldSlider=S;exports.ProFieldSwitch=h;exports.ProFieldTimeSelect=C;exports.ProFieldTreeSelect=$;exports.proFieldAvatar=T;exports.proFieldCascaderProps=R;exports.proFieldCheckboxProps=A;exports.proFieldColor=E;exports.proFieldImageProps=O;exports.proFieldProgressProps=j;exports.proFieldProps=q;exports.proFieldRadioProps=U;exports.proFieldRateProps=w;exports.proFieldSliderProps=D;exports.proFieldSwitchProps=I;exports.proFieldTimeSelectProps=B;
