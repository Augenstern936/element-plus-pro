{
  "version": 3,
  "sources": ["../../../../node_modules/.pnpm/vue-request@2.0.4_vue@3.5.13_typescript@5.7.2_/node_modules/vue-request/dist/index.es.js"],
  "sourcesContent": ["import { isRef, ref, computed, watchEffect, watch, shallowRef, inject, onUnmounted, provide } from 'vue-demi';\n\nconst GLOBAL_OPTIONS = {};\nconst GLOBAL_OPTIONS_PROVIDE_KEY = Symbol('GLOBAL_OPTIONS_PROVIDE_KEY');\nconst setGlobalOptions = config => {\n  Object.keys(config).forEach(key => {\n    GLOBAL_OPTIONS[key] = config[key];\n  });\n};\nconst getGlobalOptions = () => {\n  return GLOBAL_OPTIONS;\n};\n\nconst definePlugin = options => {\n  return options;\n};\n\nconst objectToString = Object.prototype.toString;\nconst toTypeString = val => objectToString.call(val);\nconst isPlainObject = val => toTypeString(val) === '[object Object]';\nconst isArray = val => Array.isArray(val);\nconst isObject = val => val !== null && typeof val === 'object';\nconst isFunction = fn => fn instanceof Function;\nconst isNil = val => val === null || val === undefined;\nconst isServer = typeof window === 'undefined';\nconst isDocumentVisibility = () => {\n  var _window$document;\n  if (isServer || isNil((_window$document = window.document) === null || _window$document === void 0 ? void 0 : _window$document.visibilityState)) return true;\n  return window.document.visibilityState === 'visible';\n};\nconst isOnline = () => {\n  var _ref, _window$navigator;\n  return (_ref = !isServer && ((_window$navigator = window.navigator) === null || _window$navigator === void 0 ? void 0 : _window$navigator.onLine)) !== null && _ref !== void 0 ? _ref : true;\n};\nconst resolvedPromise = () => new Promise(() => {});\nconst get = function (source, path) {\n  let defaultValue = arguments.length > 2 && arguments[2] !== undefined ? arguments[2] : undefined;\n  // a[3].b -> a.3.b\n  const paths = path.replace(/\\[(\\d+)\\]/g, '.$1').split('.');\n  let result = source;\n  for (const p of paths) {\n    result = Object(result)[p];\n    if (result === undefined) {\n      return defaultValue;\n    }\n  }\n  return result;\n};\nfunction omit(object, keys) {\n  const result = Object.assign({}, object);\n  for (const key of keys) {\n    delete result[key];\n  }\n  return result;\n}\nconst warning = function (message) {\n  let throwError = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : false;\n  const msg = `Warning: [vue-request] ${message}`;\n  if (throwError) {\n    return new Error(msg);\n  } else {\n    console.error(msg);\n  }\n};\nconst refToRaw = value => {\n  return isRef(value) ? value.value : value;\n};\nconst shallowCopy = value => {\n  if (isObject(value)) {\n    return Object.assign(isArray(value) ? [] : {}, value);\n  } else {\n    return value;\n  }\n};\n\nconst CACHE_MAP = new Map();\nconst getCache = cacheKey => {\n  if (isNil(cacheKey)) return;\n  const data = CACHE_MAP.get(cacheKey);\n  return data;\n};\nconst setCache = (cacheKey, cacheTime, data) => {\n  const oldCache = CACHE_MAP.get(cacheKey);\n  if (oldCache !== null && oldCache !== void 0 && oldCache.timer) {\n    clearTimeout(oldCache.timer);\n  }\n  const timer = setTimeout(() => CACHE_MAP.delete(cacheKey), cacheTime);\n  CACHE_MAP.set(cacheKey, {\n    ...data,\n    timer\n  });\n};\nconst clearCache = cacheKey => {\n  if (cacheKey) {\n    var _CACHE_MAP$get;\n    const timer = (_CACHE_MAP$get = CACHE_MAP.get(cacheKey)) === null || _CACHE_MAP$get === void 0 ? void 0 : _CACHE_MAP$get.timer;\n    timer && clearTimeout(timer);\n    CACHE_MAP.delete(cacheKey);\n  } else {\n    // clear timer\n    CACHE_MAP.forEach(i => i.timer && clearTimeout(i.timer));\n    CACHE_MAP.clear();\n  }\n};\n\n/**\r\n * source by `lodash`\r\n * https://github.com/lodash/lodash.git\r\n */\nfunction debounce(func, wait, options) {\n  let lastArgs, lastThis, maxWait, result, timerId, lastCallTime;\n  let lastInvokeTime = 0;\n  let leading = false;\n  let maxing = false;\n  let trailing = true;\n  // Bypass `requestAnimationFrame` by explicitly setting `wait=0`.\n  const useRAF = !wait && wait !== 0 && typeof window.requestAnimationFrame === 'function';\n  if (typeof func !== 'function') {\n    throw new TypeError('Expected a function');\n  }\n  wait = +wait || 0;\n  if (isObject(options)) {\n    leading = !!options.leading;\n    maxing = 'maxWait' in options;\n    maxWait = maxing ? Math.max(+options.maxWait || 0, wait) : maxWait;\n    trailing = 'trailing' in options ? !!options.trailing : trailing;\n  }\n  function invokeFunc(time) {\n    const args = lastArgs;\n    const thisArg = lastThis;\n    lastArgs = lastThis = undefined;\n    lastInvokeTime = time;\n    result = func.apply(thisArg, args);\n    return result;\n  }\n  function startTimer(pendingFunc, wait) {\n    if (useRAF) {\n      window.cancelAnimationFrame(timerId);\n      return window.requestAnimationFrame(pendingFunc);\n    }\n    return setTimeout(pendingFunc, wait);\n  }\n  function cancelTimer(id) {\n    if (useRAF) {\n      return window.cancelAnimationFrame(id);\n    }\n    clearTimeout(id);\n  }\n  function leadingEdge(time) {\n    // Reset any `maxWait` timer.\n    lastInvokeTime = time;\n    // Start the timer for the trailing edge.\n    timerId = startTimer(timerExpired, wait);\n    // Invoke the leading edge.\n    return leading ? invokeFunc(time) : result;\n  }\n  function remainingWait(time) {\n    const timeSinceLastCall = time - lastCallTime;\n    const timeSinceLastInvoke = time - lastInvokeTime;\n    const timeWaiting = wait - timeSinceLastCall;\n    return maxing ? Math.min(timeWaiting, maxWait - timeSinceLastInvoke) : timeWaiting;\n  }\n  function shouldInvoke(time) {\n    const timeSinceLastCall = time - lastCallTime;\n    const timeSinceLastInvoke = time - lastInvokeTime;\n    // Either this is the first call, activity has stopped and we're at the\n    // trailing edge, the system time has gone backwards and we're treating\n    // it as the trailing edge, or we've hit the `maxWait` limit.\n    return lastCallTime === undefined || timeSinceLastCall >= wait || timeSinceLastCall < 0 || maxing && timeSinceLastInvoke >= maxWait;\n  }\n  function timerExpired() {\n    const time = Date.now();\n    if (shouldInvoke(time)) {\n      return trailingEdge(time);\n    }\n    // Restart the timer.\n    timerId = startTimer(timerExpired, remainingWait(time));\n  }\n  function trailingEdge(time) {\n    timerId = undefined;\n    // Only invoke if we have `lastArgs` which means `func` has been\n    // debounced at least once.\n    if (trailing && lastArgs) {\n      return invokeFunc(time);\n    }\n    lastArgs = lastThis = undefined;\n    return result;\n  }\n  function cancel() {\n    if (timerId !== undefined) {\n      cancelTimer(timerId);\n    }\n    lastInvokeTime = 0;\n    lastArgs = lastCallTime = lastThis = timerId = undefined;\n  }\n  function flush() {\n    return timerId === undefined ? result : trailingEdge(Date.now());\n  }\n  function pending() {\n    return timerId !== undefined;\n  }\n  function debounced() {\n    const time = Date.now();\n    const isInvoking = shouldInvoke(time);\n    for (var _len = arguments.length, args = new Array(_len), _key = 0; _key < _len; _key++) {\n      args[_key] = arguments[_key];\n    }\n    lastArgs = args;\n    lastThis = this;\n    lastCallTime = time;\n    if (isInvoking) {\n      if (timerId === undefined) {\n        return leadingEdge(lastCallTime);\n      }\n      if (maxing) {\n        // Handle invocations in a tight loop.\n        timerId = startTimer(timerExpired, wait);\n        return invokeFunc(lastCallTime);\n      }\n    }\n    if (timerId === undefined) {\n      timerId = startTimer(timerExpired, wait);\n    }\n    return result;\n  }\n  debounced.cancel = cancel;\n  debounced.flush = flush;\n  debounced.pending = pending;\n  return debounced;\n}\n\nfunction baseMerge(origin, target) {\n  for (const key in target) {\n    if (target[key] === undefined) {\n      continue;\n    }\n    if (!isObject(target[key]) ||\n    // `target[key]` is not an object\n    !isObject(origin[key]) ||\n    // `target[key]` is not an object\n    !(key in origin) // `key` is not in the origin object\n    ) {\n      origin[key] = target[key];\n      continue;\n    }\n    if (isPlainObject(target[key]) || isArray(target[key])) {\n      baseMerge(origin[key], target[key]);\n    }\n  }\n}\nfunction merge(origin) {\n  const result = Object.assign({}, origin);\n  for (var _len = arguments.length, others = new Array(_len > 1 ? _len - 1 : 0), _key = 1; _key < _len; _key++) {\n    others[_key - 1] = arguments[_key];\n  }\n  if (!others.length) return result;\n  for (const item of others) {\n    baseMerge(result, item);\n  }\n  return result;\n}\n\n/**\r\n * source by `lodash`\r\n * https://github.com/lodash/lodash.git\r\n */\nfunction throttle(func, wait, options) {\n  let leading = true;\n  let trailing = true;\n  if (typeof func !== 'function') {\n    throw new TypeError('Expected a function');\n  }\n  if (isObject(options)) {\n    leading = 'leading' in options ? !!options.leading : leading;\n    trailing = 'trailing' in options ? !!options.trailing : trailing;\n  }\n  return debounce(func, wait, {\n    leading,\n    trailing,\n    maxWait: wait\n  });\n}\n\nvar useDebouncePlugin = definePlugin((queryInstance, _ref) => {\n  let {\n    debounceInterval,\n    debounceOptions,\n    manual\n  } = _ref;\n  const initialAutoRunFlag = ref(false);\n  const debouncedRun = ref();\n  const debounceOptionsRef = computed(() => debounceOptions);\n  const debounceIntervalRef = computed(() => refToRaw(debounceInterval));\n  const originRunRef = ref(queryInstance.context.runAsync);\n  if (!manual) {\n    initialAutoRunFlag.value = true;\n  }\n  watchEffect(onInvalidate => {\n    if (isNil(debounceIntervalRef.value)) return;\n    debouncedRun.value = debounce(callback => callback(), debounceIntervalRef.value, debounceOptionsRef.value);\n    queryInstance.context.runAsync = function () {\n      for (var _len = arguments.length, args = new Array(_len), _key = 0; _key < _len; _key++) {\n        args[_key] = arguments[_key];\n      }\n      return new Promise((resolve, reject) => {\n        if (initialAutoRunFlag.value) {\n          initialAutoRunFlag.value = false;\n          originRunRef.value(...args).then(resolve).catch(reject);\n        } else {\n          debouncedRun.value(() => {\n            originRunRef.value(...args).then(resolve).catch(reject);\n          });\n        }\n      });\n    };\n    onInvalidate(() => {\n      var _debouncedRun$value;\n      (_debouncedRun$value = debouncedRun.value) === null || _debouncedRun$value === void 0 ? void 0 : _debouncedRun$value.cancel();\n      queryInstance.context.runAsync = originRunRef.value;\n    });\n  });\n  return {\n    onCancel() {\n      var _debouncedRun$value2;\n      (_debouncedRun$value2 = debouncedRun.value) === null || _debouncedRun$value2 === void 0 ? void 0 : _debouncedRun$value2.cancel();\n    }\n  };\n});\n\nvar useErrorRetryPlugin = definePlugin((queryInstance, _ref) => {\n  let {\n    errorRetryCount = 0,\n    errorRetryInterval = 0\n  } = _ref;\n  const retryTimer = ref();\n  const retriedCount = ref(0);\n  const errorRetryCountRef = computed(() => refToRaw(errorRetryCount));\n  const errorRetryIntervalRef = computed(() => refToRaw(errorRetryInterval));\n  let isRetrying = false;\n  // reset retried count\n  const resetRetriedCount = () => {\n    retriedCount.value = 0;\n  };\n  const actualErrorRetryInterval = computed(() => {\n    if (errorRetryIntervalRef.value) return errorRetryIntervalRef.value;\n    const baseTime = 1000;\n    const minCoefficient = 1;\n    const maxCoefficient = 9;\n    // When retrying for the first time, in order to avoid the coefficient being 0\n    // so replace 0 with 2, the coefficient range will become 1 - 2\n    const coefficient = Math.floor(Math.random() * 2 ** Math.min(retriedCount.value, maxCoefficient) + minCoefficient);\n    return baseTime * coefficient;\n  });\n  const errorRetryHooks = () => {\n    let timerId;\n    const isInfiniteRetry = errorRetryCountRef.value === -1;\n    const hasRetryCount = retriedCount.value < errorRetryCountRef.value;\n    // if errorRetryCount is -1, it will retry the request until it success\n    if (isInfiniteRetry || hasRetryCount) {\n      if (!isInfiniteRetry) retriedCount.value += 1;\n      timerId = setTimeout(() => {\n        isRetrying = true;\n        queryInstance.context.refresh();\n      }, actualErrorRetryInterval.value);\n    }\n    return () => timerId && clearTimeout(timerId);\n  };\n  // clear retryTimer\n  const clearTimer = () => {\n    if (retryTimer.value) {\n      retryTimer.value();\n    }\n  };\n  return {\n    onBefore() {\n      if (!isRetrying) {\n        resetRetriedCount();\n      }\n      isRetrying = false;\n      clearTimer();\n    },\n    onSuccess() {\n      resetRetriedCount();\n    },\n    onError() {\n      retryTimer.value = errorRetryHooks();\n    },\n    onCancel() {\n      // TODO: Whether to reset the count when `onCancel`\n      resetRetriedCount();\n      clearTimer();\n    }\n  };\n});\n\nvar useReadyPlugin = definePlugin((queryInstance, _ref) => {\n  let {\n    ready = ref(true),\n    manual,\n    defaultParams = []\n  } = _ref;\n  // watch ready\n  watch(ready, val => {\n    if (!manual && val) {\n      queryInstance.context.run(...defaultParams);\n    }\n  }, {\n    flush: 'sync'\n  });\n  return {\n    onBefore() {\n      const readyFlag = isFunction(ready) ? ready() : ready.value;\n      if (!readyFlag) {\n        queryInstance.loading.value = false;\n        return {\n          isBreak: true\n        };\n      }\n    }\n  };\n});\n\nvar useRefreshDepsPlugin = definePlugin((queryInstance, _ref) => {\n  let {\n    refreshDeps,\n    refreshDepsAction,\n    manual\n  } = _ref;\n  if (refreshDeps === undefined || isArray(refreshDeps) && refreshDeps.length === 0) return {};\n  const deps = isArray(refreshDeps) ? refreshDeps : [refreshDeps];\n  // watch refreshDeps\n  watch(deps, () => {\n    if (refreshDepsAction) {\n      refreshDepsAction();\n    } else {\n      !manual && queryInstance.context.refresh();\n    }\n  });\n  return {};\n});\n\nvar useThrottlePlugin = definePlugin((queryInstance, _ref) => {\n  let {\n    throttleInterval,\n    throttleOptions\n  } = _ref;\n  const throttledRun = ref();\n  const throttleIntervalRef = computed(() => refToRaw(throttleInterval));\n  const throttleOptionsRef = computed(() => throttleOptions);\n  const originRunRef = ref(queryInstance.context.runAsync);\n  watchEffect(onInvalidate => {\n    if (isNil(throttleInterval)) return {};\n    throttledRun.value = throttle(callback => callback(), throttleIntervalRef.value, throttleOptionsRef.value);\n    queryInstance.context.runAsync = function () {\n      for (var _len = arguments.length, args = new Array(_len), _key = 0; _key < _len; _key++) {\n        args[_key] = arguments[_key];\n      }\n      return new Promise((resolve, reject) => {\n        throttledRun.value(() => {\n          originRunRef.value(...args).then(resolve).catch(reject);\n        });\n      });\n    };\n    onInvalidate(() => {\n      var _throttledRun$value;\n      (_throttledRun$value = throttledRun.value) === null || _throttledRun$value === void 0 ? void 0 : _throttledRun$value.cancel();\n      queryInstance.context.runAsync = originRunRef.value;\n    });\n  });\n  return {\n    onCancel() {\n      var _throttledRun$value2;\n      (_throttledRun$value2 = throttledRun.value) === null || _throttledRun$value2 === void 0 ? void 0 : _throttledRun$value2.cancel();\n    }\n  };\n});\n\nconst setStateBind = (oldState, publicCb) => {\n  return newState => {\n    Object.keys(newState).forEach(key => {\n      oldState[key].value = newState[key];\n    });\n    publicCb.forEach(fun => fun(oldState));\n  };\n};\nconst composeMiddleware = (middleArray, hook) => {\n  return () => {\n    let next = hook;\n    for (let i = middleArray.length; i-- > 0;) {\n      next = middleArray[i](next);\n    }\n    return next();\n  };\n};\nconst createQuery = (service, config, initialState) => {\n  var _initialState$loading, _initialState$data;\n  const {\n    initialData,\n    onSuccess,\n    onError,\n    onBefore,\n    onAfter\n  } = config;\n  const loading = ref((_initialState$loading = initialState === null || initialState === void 0 ? void 0 : initialState.loading) !== null && _initialState$loading !== void 0 ? _initialState$loading : false);\n  const data = shallowRef((_initialState$data = initialState === null || initialState === void 0 ? void 0 : initialState.data) !== null && _initialState$data !== void 0 ? _initialState$data : initialData);\n  const error = shallowRef(initialState === null || initialState === void 0 ? void 0 : initialState.error);\n  const params = ref(initialState === null || initialState === void 0 ? void 0 : initialState.params);\n  const plugins = ref([]);\n  const status = shallowRef('pending');\n  const context = {};\n  const setState = setStateBind({\n    status,\n    loading,\n    data,\n    error,\n    params\n  }, []);\n  const emit = function (event) {\n    for (var _len = arguments.length, args = new Array(_len > 1 ? _len - 1 : 0), _key = 1; _key < _len; _key++) {\n      args[_key - 1] = arguments[_key];\n    }\n    if (event === 'onQuery') {\n      const queryFn = plugins.value.map(i => i.onQuery).filter(Boolean);\n      return {\n        servicePromise: composeMiddleware(queryFn, args[0])()\n      };\n    } else {\n      // @ts-ignore\n      const res = plugins.value.map(i => {\n        var _i$event;\n        return (_i$event = i[event]) === null || _i$event === void 0 ? void 0 : _i$event.call(i, ...args);\n      });\n      return Object.assign({}, ...res);\n    }\n  };\n  const count = ref(0);\n  context.runAsync = async function () {\n    for (var _len2 = arguments.length, args = new Array(_len2), _key2 = 0; _key2 < _len2; _key2++) {\n      args[_key2] = arguments[_key2];\n    }\n    setState({\n      loading: true,\n      params: args,\n      status: 'pending'\n    });\n    count.value += 1;\n    const currentCount = count.value;\n    const {\n      isBreak,\n      breakResult = resolvedPromise()\n    } = emit('onBefore', args);\n    if (isBreak) {\n      setState({\n        status: 'settled'\n      });\n      return breakResult;\n    }\n    onBefore === null || onBefore === void 0 ? void 0 : onBefore(args);\n    try {\n      const serviceWrapper = () => new Promise(resolve => resolve(service(...params.value)));\n      let {\n        servicePromise\n      } = emit('onQuery', serviceWrapper);\n      /* istanbul ignore next */\n      if (!servicePromise) {\n        servicePromise = serviceWrapper();\n      }\n      const res = await servicePromise;\n      if (currentCount !== count.value) return resolvedPromise();\n      setState({\n        data: res,\n        loading: false,\n        error: undefined,\n        status: 'settled'\n      });\n      emit('onSuccess', res, args);\n      onSuccess === null || onSuccess === void 0 ? void 0 : onSuccess(res, args);\n      if (currentCount === count.value) {\n        emit('onAfter', args, res, undefined);\n      }\n      onAfter === null || onAfter === void 0 ? void 0 : onAfter(args);\n      return res;\n    } catch (error) {\n      if (currentCount !== count.value) return resolvedPromise();\n      setState({\n        loading: false,\n        error: error,\n        status: 'settled'\n      });\n      emit('onError', error, args);\n      onError === null || onError === void 0 ? void 0 : onError(error, args);\n      if (currentCount === count.value) {\n        emit('onAfter', args, undefined, error);\n      }\n      onAfter === null || onAfter === void 0 ? void 0 : onAfter(args);\n      throw error;\n    }\n  };\n  context.run = function () {\n    context.runAsync(...arguments).catch(error => {\n      if (!onError) {\n        console.error(error);\n      }\n    });\n  };\n  context.cancel = () => {\n    count.value += 1;\n    setState({\n      loading: false\n    });\n    emit('onCancel');\n  };\n  context.refresh = () => {\n    context.run(...(params.value || []));\n  };\n  context.refreshAsync = () => {\n    return context.runAsync(...(params.value || []));\n  };\n  context.mutate = x => {\n    const mutateData = isFunction(x) ? x(data.value) : x;\n    const _mutateData = shallowCopy(mutateData);\n    setState({\n      data: _mutateData\n    });\n    emit('onMutate', _mutateData);\n  };\n  return {\n    status,\n    loading,\n    data,\n    error,\n    params,\n    plugins,\n    context\n  };\n};\n\nfunction useQuery(service) {\n  let options = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : {};\n  let plugins = arguments.length > 2 ? arguments[2] : undefined;\n  const injectedGlobalOptions = inject(GLOBAL_OPTIONS_PROVIDE_KEY, {});\n  const config = {\n    ...getGlobalOptions(),\n    ...injectedGlobalOptions,\n    ...options\n  };\n  const {\n    manual = false,\n    defaultParams = []\n  } = config;\n  const queryInstance = createQuery(service, config);\n  queryInstance.plugins.value = plugins.map(i => i(queryInstance, config));\n  // initial run\n  if (!manual) {\n    const params = queryInstance.params.value || defaultParams;\n    queryInstance.context.run(...params);\n  }\n  onUnmounted(() => {\n    queryInstance.context.cancel();\n  });\n  return {\n    loading: queryInstance.loading,\n    data: queryInstance.data,\n    error: queryInstance.error,\n    params: queryInstance.params,\n    cancel: queryInstance.context.cancel,\n    refresh: queryInstance.context.refresh,\n    refreshAsync: queryInstance.context.refreshAsync,\n    mutate: queryInstance.context.mutate,\n    run: queryInstance.context.run,\n    runAsync: queryInstance.context.runAsync\n  };\n}\n\nfunction useLoadMore(service, options) {\n  const {\n    isNoMore,\n    ...restOptions\n  } = options !== null && options !== void 0 ? options : {};\n  const data = shallowRef();\n  const dataList = computed(() => {\n    var _data$value;\n    return ((_data$value = data.value) === null || _data$value === void 0 ? void 0 : _data$value.list) || [];\n  });\n  const loadingMore = ref(false);\n  const isTriggerByLoadMore = ref(false);\n  const count = ref(0);\n  const {\n    runAsync,\n    run,\n    cancel: _cancel,\n    ...rest\n  } = useQuery(async lastData => {\n    const currentCount = count.value;\n    const currentData = await service(lastData);\n    if (currentCount === count.value) {\n      if (lastData) {\n        data.value = {\n          ...currentData,\n          list: [...lastData.list, ...currentData.list]\n        };\n      } else {\n        data.value = currentData;\n      }\n    }\n    return currentData;\n  }, {\n    ...restOptions,\n    defaultParams: [],\n    refreshDepsAction: () => {\n      if (restOptions !== null && restOptions !== void 0 && restOptions.refreshDepsAction) {\n        restOptions.refreshDepsAction();\n      } else {\n        refresh();\n      }\n    },\n    onError: error => {\n      var _restOptions$onError;\n      restOptions === null || restOptions === void 0 ? void 0 : (_restOptions$onError = restOptions.onError) === null || _restOptions$onError === void 0 ? void 0 : _restOptions$onError.call(restOptions, error);\n    },\n    onSuccess: data => {\n      var _restOptions$onSucces;\n      restOptions === null || restOptions === void 0 ? void 0 : (_restOptions$onSucces = restOptions.onSuccess) === null || _restOptions$onSucces === void 0 ? void 0 : _restOptions$onSucces.call(restOptions, data);\n    },\n    onBefore: () => {\n      var _restOptions$onBefore;\n      count.value += 1;\n      if (isTriggerByLoadMore.value) {\n        isTriggerByLoadMore.value = false;\n        loadingMore.value = true;\n      }\n      restOptions === null || restOptions === void 0 ? void 0 : (_restOptions$onBefore = restOptions.onBefore) === null || _restOptions$onBefore === void 0 ? void 0 : _restOptions$onBefore.call(restOptions);\n    },\n    onAfter: () => {\n      var _restOptions$onAfter;\n      loadingMore.value = false;\n      isTriggerByLoadMore.value = false;\n      restOptions === null || restOptions === void 0 ? void 0 : (_restOptions$onAfter = restOptions.onAfter) === null || _restOptions$onAfter === void 0 ? void 0 : _restOptions$onAfter.call(restOptions);\n    }\n  }, [useErrorRetryPlugin, useDebouncePlugin, useThrottlePlugin, useRefreshDepsPlugin, useReadyPlugin]);\n  const noMore = computed(() => {\n    return isNoMore && isFunction(isNoMore) ? isNoMore(data.value) : false;\n  });\n  const loadMore = () => {\n    loadMoreAsync().catch(() => {});\n  };\n  const loadMoreAsync = () => {\n    if (noMore.value) {\n      return Promise.reject(warning('No more data. You need to ignore this error by checking if `noMore` is false before calling `loadMoreAsync`', true));\n    }\n    isTriggerByLoadMore.value = true;\n    return runAsync(data.value);\n  };\n  const refresh = () => run();\n  const refreshAsync = () => runAsync();\n  const cancel = () => {\n    count.value += 1;\n    _cancel();\n    loadingMore.value = false;\n  };\n  const mutate = x => {\n    const mutateData = isFunction(x) ? x(data.value) : x;\n    const _mutateData = shallowCopy(mutateData);\n    data.value = _mutateData;\n  };\n  return {\n    data,\n    dataList,\n    loadingMore,\n    noMore,\n    cancel,\n    mutate,\n    refresh,\n    refreshAsync,\n    loadMore,\n    loadMoreAsync,\n    ...omit(rest, ['refresh', 'refreshAsync', 'mutate', 'params', 'data'])\n  };\n}\n\nconst cacheQuery = new Map();\nconst setCacheQuery = (cacheKey, query) => {\n  cacheQuery.set(cacheKey, query);\n  query.then(res => {\n    cacheQuery.delete(cacheKey);\n    return res;\n  }).catch(() => {\n    cacheQuery.delete(cacheKey);\n  });\n};\nconst getCacheQuery = cacheKey => {\n  return cacheQuery.get(cacheKey);\n};\n\nconst listeners = new Map();\nconst trigger = (key, data) => {\n  if (listeners.has(key)) {\n    listeners.get(key).forEach(item => item(data));\n  }\n};\nconst subscribe = (key, listener) => {\n  if (!listeners.has(key)) {\n    listeners.set(key, [listener]);\n  } else {\n    listeners.get(key).push(listener);\n  }\n  return () => {\n    const index = listeners.get(key).indexOf(listener);\n    listeners.get(key).splice(index, 1);\n  };\n};\n\nvar useCachePlugin = definePlugin((queryInstance, _ref) => {\n  let {\n    cacheKey: customCacheKey,\n    cacheTime = 600000,\n    staleTime = 0,\n    getCache: customGetCache,\n    setCache: customSetCache\n  } = _ref;\n  if (!customCacheKey) return {};\n  const cacheKey = isFunction(customCacheKey) ? customCacheKey : () => customCacheKey;\n  const unSubscribe = ref(() => {});\n  let currentQuery;\n  const _getCache = key => {\n    if (customGetCache) {\n      return customGetCache(key);\n    } else {\n      return getCache(key);\n    }\n  };\n  const _setCache = (key, time, cacheData) => {\n    if (customSetCache) {\n      customSetCache(key, cacheData);\n    } else {\n      setCache(key, time, cacheData);\n    }\n    trigger(key, cacheData.data);\n  };\n  const isFresh = time => staleTime === -1 || time + staleTime > new Date().getTime();\n  // Returns a boolean indicating whether the object has the specified property as its own property\n  // (as opposed to inheriting it)\n  const hasProp = (object, prop) => Object.prototype.hasOwnProperty.call(object, prop);\n  const subscribeCache = params => {\n    const _cacheKey = cacheKey(params);\n    return subscribe(_cacheKey, data => {\n      queryInstance.data.value = data;\n    });\n  };\n  // When initializing, restore if there is a cache\n  const _cacheKey = cacheKey();\n  const cache = _getCache(_cacheKey);\n  if (cache && hasProp(cache, 'data')) {\n    queryInstance.data.value = cache.data;\n    queryInstance.params.value = cache.params;\n  }\n  if (_cacheKey) {\n    unSubscribe.value = subscribeCache();\n  }\n  onUnmounted(() => {\n    unSubscribe.value();\n  });\n  return {\n    onBefore(params) {\n      const _cacheKey = cacheKey(params);\n      const cache = _getCache(_cacheKey);\n      if (!cache || !hasProp(cache, 'data')) {\n        return {};\n      }\n      // If it's fresh, stop the request\n      if (isFresh(cache.time)) {\n        queryInstance.data.value = cache.data;\n        queryInstance.loading.value = false;\n        return {\n          isBreak: true,\n          breakResult: cache.data\n        };\n      } else {\n        // If it is not fresh, set data and request\n        queryInstance.data.value = cache.data;\n      }\n    },\n    onQuery(service) {\n      const params = queryInstance.params.value;\n      const _cacheKey = cacheKey(params);\n      let servicePromise = getCacheQuery(_cacheKey);\n      if (servicePromise && servicePromise !== currentQuery) {\n        return () => servicePromise;\n      }\n      servicePromise = service();\n      currentQuery = servicePromise;\n      setCacheQuery(_cacheKey, servicePromise);\n      return () => servicePromise;\n    },\n    onSuccess(data, params) {\n      const _cacheKey = cacheKey(params);\n      if (_cacheKey) {\n        unSubscribe.value();\n        _setCache(_cacheKey, cacheTime, {\n          data,\n          params,\n          time: new Date().getTime()\n        });\n        unSubscribe.value = subscribeCache(params);\n      }\n    },\n    onMutate(data) {\n      const _cacheKey = cacheKey(queryInstance.params.value);\n      if (_cacheKey) {\n        unSubscribe.value();\n        _setCache(_cacheKey, cacheTime, {\n          data,\n          params: queryInstance.params.value,\n          time: new Date().getTime()\n        });\n        unSubscribe.value = subscribeCache(queryInstance.params.value);\n      }\n    }\n  };\n});\n\nfunction setTimeoutPromise(duration) {\n  let timerId, stop;\n  class Timer extends Promise {\n    constructor(fn) {\n      super(fn);\n      this.cancel = () => {\n        stop();\n        clearTimeout(timerId);\n      };\n    }\n  }\n  return new Timer(resolve => {\n    stop = resolve;\n    timerId = setTimeout(stop, duration);\n  });\n}\nfunction getCurrentTime() {\n  return new Date().getTime();\n}\nvar useLoadingDelayPlugin = definePlugin((queryInstance, _ref) => {\n  let {\n    loadingDelay = 0,\n    loadingKeep = 0\n  } = _ref;\n  const delayLoadingTimer = ref(() => {});\n  const loadingDelayRef = computed(() => refToRaw(loadingDelay));\n  const loadingKeepRef = computed(() => refToRaw(loadingKeep));\n  let startTime = 0;\n  let timeoutPromise = {};\n  const delayLoading = () => {\n    let timerId;\n    if (loadingDelayRef.value) {\n      timerId = setTimeout(() => {\n        if (queryInstance.status.value === 'pending') {\n          queryInstance.loading.value = true;\n        }\n      }, loadingDelayRef.value);\n    }\n    return () => timerId && clearTimeout(timerId);\n  };\n  return {\n    onBefore() {\n      queryInstance.loading.value = !loadingDelayRef.value;\n      delayLoadingTimer.value();\n      delayLoadingTimer.value = delayLoading();\n      startTime = getCurrentTime();\n    },\n    onQuery(service) {\n      if (!loadingKeepRef.value) return () => service();\n      timeoutPromise = setTimeoutPromise(loadingKeepRef.value + loadingDelayRef.value);\n      const _service = async () => {\n        try {\n          const res = await service();\n          if (getCurrentTime() - startTime <= loadingDelayRef.value) {\n            timeoutPromise.cancel();\n          }\n          return Promise.resolve(res);\n        } catch (error) {\n          if (getCurrentTime() - startTime <= loadingDelayRef.value) {\n            timeoutPromise.cancel();\n          }\n          return Promise.reject(error);\n        }\n      };\n      const servicePromise = Promise.allSettled([_service(), timeoutPromise]).then(res => {\n        const result = res[0];\n        if (result.status === 'fulfilled') {\n          return result.value;\n        } else {\n          return Promise.reject(result.reason);\n        }\n      });\n      return () => servicePromise;\n    },\n    onCancel() {\n      delayLoadingTimer.value();\n    },\n    onAfter() {\n      delayLoadingTimer.value();\n    }\n  };\n});\n\nvar _window;\nconst FOCUS_LISTENER = new Set();\nconst VISIBLE_LISTENER = new Set();\nconst RECONNECT_LISTENER = new Set();\nconst subscriber = (listenerType, event) => {\n  let listeners;\n  switch (listenerType) {\n    case 'FOCUS_LISTENER':\n      listeners = FOCUS_LISTENER;\n      break;\n    case 'RECONNECT_LISTENER':\n      listeners = RECONNECT_LISTENER;\n      break;\n    case 'VISIBLE_LISTENER':\n      listeners = VISIBLE_LISTENER;\n      break;\n  }\n  if (listeners.has(event)) return;\n  listeners.add(event);\n  return () => {\n    listeners.delete(event);\n  };\n};\nconst observer = listeners => {\n  listeners.forEach(event => {\n    event();\n  });\n};\n/* istanbul ignore else */\nif (!isServer && (_window = window) !== null && _window !== void 0 && _window.addEventListener) {\n  window.addEventListener('visibilitychange', () => {\n    /* istanbul ignore else */\n    if (isDocumentVisibility()) {\n      observer(VISIBLE_LISTENER);\n    }\n  }, false);\n  window.addEventListener('focus', () => observer(FOCUS_LISTENER), false);\n  window.addEventListener('online', () => observer(RECONNECT_LISTENER), false);\n}\n\nvar usePollingPlugin = definePlugin((queryInstance, _ref) => {\n  let {\n    pollingInterval,\n    pollingWhenHidden = false,\n    pollingWhenOffline = false,\n    errorRetryCount = 0\n  } = _ref;\n  const pollingTimer = ref();\n  const stopPollingWhenHiddenOrOffline = ref(false);\n  const pollingIntervalRef = computed(() => refToRaw(pollingInterval));\n  const errorRetryCountRef = computed(() => refToRaw(errorRetryCount));\n  const unsubscribeList = [];\n  const addUnsubscribeList = event => {\n    event && unsubscribeList.push(event);\n  };\n  const isKeepPolling = () => {\n    return (\n      // pollingWhenHidden = true or pollingWhenHidden = false and document is visibility\n      (pollingWhenHidden || isDocumentVisibility()) && (\n      // pollingWhenOffline = true or pollingWhenOffline = false and is online\n      pollingWhenOffline || isOnline())\n    );\n  };\n  const polling = pollingFunc => {\n    // if errorRetry is enabled, then skip this method\n    if (queryInstance.error.value && errorRetryCountRef.value !== 0) return;\n    let timerId;\n    if (!isNil(pollingIntervalRef.value) && pollingIntervalRef.value >= 0) {\n      if (isKeepPolling()) {\n        timerId = setTimeout(pollingFunc, pollingIntervalRef.value);\n      } else {\n        // stop polling\n        stopPollingWhenHiddenOrOffline.value = true;\n        return;\n      }\n    }\n    return () => timerId && clearTimeout(timerId);\n  };\n  const rePolling = () => {\n    if (stopPollingWhenHiddenOrOffline.value && isKeepPolling()) {\n      queryInstance.context.refresh();\n      stopPollingWhenHiddenOrOffline.value = false;\n    }\n  };\n  watch(pollingIntervalRef, () => {\n    if (pollingTimer.value) {\n      pollingTimer.value();\n      pollingTimer.value = polling(() => queryInstance.context.refresh());\n    }\n  });\n  // subscribe polling\n  if (!pollingWhenHidden) {\n    addUnsubscribeList(subscriber('VISIBLE_LISTENER', rePolling));\n  }\n  // subscribe online when pollingWhenOffline is false\n  if (!pollingWhenOffline) {\n    addUnsubscribeList(subscriber('RECONNECT_LISTENER', rePolling));\n  }\n  onUnmounted(() => {\n    unsubscribeList.forEach(unsubscribe => unsubscribe());\n  });\n  return {\n    onBefore() {\n      var _pollingTimer$value;\n      (_pollingTimer$value = pollingTimer.value) === null || _pollingTimer$value === void 0 ? void 0 : _pollingTimer$value.call(pollingTimer);\n    },\n    onCancel() {\n      var _pollingTimer$value2;\n      (_pollingTimer$value2 = pollingTimer.value) === null || _pollingTimer$value2 === void 0 ? void 0 : _pollingTimer$value2.call(pollingTimer);\n    },\n    onAfter() {\n      pollingTimer.value = polling(() => queryInstance.context.refresh());\n    }\n  };\n});\n\nconst limitTrigger = (fn, timeInterval) => {\n  let running = false;\n  return function () {\n    if (running) return;\n    running = true;\n    fn(...arguments);\n    setTimeout(() => {\n      running = false;\n    }, timeInterval);\n  };\n};\n\nvar useRefreshOnWindowFocus = definePlugin((queryInstance, _ref) => {\n  let {\n    refreshOnWindowFocus = false,\n    refocusTimespan = 5000\n  } = _ref;\n  const refreshOnWindowFocusRef = computed(() => refToRaw(refreshOnWindowFocus));\n  const refocusTimespanRef = computed(() => refToRaw(refocusTimespan));\n  const unsubscribeList = [];\n  const addUnsubscribeList = event => {\n    event && unsubscribeList.push(event);\n  };\n  const unsubscribe = () => {\n    unsubscribeList.forEach(fn => fn());\n  };\n  watchEffect(() => {\n    unsubscribe();\n    if (refreshOnWindowFocusRef.value) {\n      const limitRefresh = limitTrigger(queryInstance.context.refresh, refocusTimespanRef.value);\n      addUnsubscribeList(subscriber('VISIBLE_LISTENER', limitRefresh));\n      addUnsubscribeList(subscriber('FOCUS_LISTENER', limitRefresh));\n    }\n  });\n  onUnmounted(() => {\n    unsubscribe();\n  });\n  return {};\n});\n\nfunction useRequest(service, options, plugins) {\n  return useQuery(service, options, [...(plugins || []), useLoadingDelayPlugin, useErrorRetryPlugin, useDebouncePlugin, usePollingPlugin, useThrottlePlugin, useRefreshOnWindowFocus, useRefreshDepsPlugin, useReadyPlugin, useCachePlugin]);\n}\n\nfunction usePagination(service) {\n  let options = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : {};\n  const defaultPaginationOptions = {\n    currentKey: 'current',\n    pageSizeKey: 'pageSize',\n    totalKey: 'total',\n    totalPageKey: 'totalPage'\n  };\n  const injectedGlobalOptions = inject(GLOBAL_OPTIONS_PROVIDE_KEY, {});\n  const {\n    pagination,\n    ...restOptions\n  } = options;\n  const {\n    currentKey,\n    pageSizeKey,\n    totalKey,\n    totalPageKey\n  } = merge(defaultPaginationOptions, getGlobalOptions().pagination || {}, injectedGlobalOptions.pagination || {}, pagination || {});\n  const finallyOptions = merge({\n    defaultParams: [{\n      [currentKey]: 1,\n      [pageSizeKey]: 10\n    }]\n  }, restOptions);\n  const {\n    data,\n    params,\n    run,\n    ...rest\n  } = useRequest(service, finallyOptions);\n  const paging = paginationParams => {\n    const [oldPaginationParams, ...restParams] = params.value || [];\n    const newPaginationParams = {\n      ...oldPaginationParams,\n      ...paginationParams\n    };\n    const mergerParams = [newPaginationParams, ...restParams];\n    run(...mergerParams);\n  };\n  // changeCurrent\tchange current page\t(current: number) => void\n  const changeCurrent = current => {\n    paging({\n      [currentKey]: current\n    });\n  };\n  // changePageSize\tchange pageSize\t(pageSize: number) => void\n  const changePageSize = pageSize => {\n    paging({\n      [pageSizeKey]: pageSize\n    });\n  };\n  // changePagination\tchange current and pageSize\t(current: number, pageSize: number) => void\n  const changePagination = (current, pageSize) => {\n    paging({\n      [currentKey]: current,\n      [pageSizeKey]: pageSize\n    });\n  };\n  const total = computed(() => get(data.value, totalKey, 0));\n  const current = computed({\n    get: () => {\n      var _params$value$0$curre, _params$value, _params$value$;\n      return (// @ts-ignore\n        (_params$value$0$curre = (_params$value = params.value) === null || _params$value === void 0 ? void 0 : (_params$value$ = _params$value[0]) === null || _params$value$ === void 0 ? void 0 : _params$value$[currentKey]) !== null && _params$value$0$curre !== void 0 ? _params$value$0$curre : finallyOptions.defaultParams[0][currentKey]\n      );\n    },\n    set: val => {\n      changeCurrent(val);\n    }\n  });\n  const pageSize = computed({\n    get: () => {\n      var _params$value$0$pageS, _params$value2, _params$value2$;\n      return (// @ts-ignore\n        (_params$value$0$pageS = (_params$value2 = params.value) === null || _params$value2 === void 0 ? void 0 : (_params$value2$ = _params$value2[0]) === null || _params$value2$ === void 0 ? void 0 : _params$value2$[pageSizeKey]) !== null && _params$value$0$pageS !== void 0 ? _params$value$0$pageS : finallyOptions.defaultParams[0][pageSizeKey]\n      );\n    },\n    set: val => {\n      changePageSize(val);\n    }\n  });\n  const totalPage = computed(() => get(data.value, totalPageKey, Math.ceil(total.value / pageSize.value)));\n  return {\n    data,\n    params,\n    current,\n    pageSize,\n    total,\n    totalPage,\n    run,\n    changeCurrent,\n    changePageSize,\n    changePagination,\n    ...rest\n  };\n}\n\nvar useRequestProvider = (config => {\n  provide(GLOBAL_OPTIONS_PROVIDE_KEY, config);\n});\n\nexport { clearCache, definePlugin, setGlobalOptions, useLoadMore, usePagination, useRequest, useRequestProvider };\n"],
  "mappings": "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",
  "names": ["wait", "error", "data", "_cacheKey", "cache", "listeners", "current", "pageSize"]
}
